<?xml version="1.0"?>
<launch>
  <arg name="use_empty_dynamic_object_publisher" default="false" description="if true, /perception/object_recognition/objects topic has an empty DynamicObjectArray"/>
  <arg name="use_traffic_light_recognition" default="true" description="use traffic light recognition module, if false, traffic light recognition module will not be launched"/>

  <arg name="use_low_height_cropbox" default="false" description="use low height crop filter in clustering"/>
  <arg name="use_vector_map" default="true" description="use vector map in prediction"/>
  <arg name="use_pointcloud_map" default="true" description="use pointcloud map in detection"/>
  <arg name="use_roi_based_cluster" default="true" description="launch roi_based_cluster in clustering"/>
  <arg name="use_low_intensity_cluster_filter" default="true" description="launch low_intensity_cluster_filter in clustering"/>
  <arg name="use_image_segmentation_based_filter" default="false" description="launch image_segmentation_based_filter in clustering"/>
  <arg name="use_perception_online_evaluator" default="false" description="launch perception online evaluator"/>
  <arg name="use_detection_by_tracker" default="true" description="launch detection_by_tracker function"/>
  <arg name="use_radar_tracking_fusion" default="true" description="if true, radar objects are merged in tracking module. Otherwise, radar objects are merged in detection module."/>
  <arg name="use_object_filter" default="true" description="launch object filter to filter-out detected object"/>

  <arg name="occupancy_grid_map_method" default="pointcloud_based" description="options: pointcloud_based, laserscan_based, multi_lidar_pointcloud_based"/>
  <arg name="occupancy_grid_map_updater" default="binary_bayes_filter" description="options: binary_bayes_filter"/>
  <arg name="detected_objects_filter_method" default="lanelet_filter" description="options: lanelet_filter, position_filter"/>
  <arg name="detected_objects_validation_method" default="obstacle_pointcloud" description="options: obstacle_pointcloud, occupancy_grid (must be used with laserscan_based_occupancy_grid_map)"/>
  <arg name="data_path" default="$(env HOME)/autoware_data" description="packages data and artifacts directory path"/>
  <arg name="lidar_detection_model" default="centerpoint" description="If the model name is not declared, the default model in perception.launch.xml will be used"/>
  <arg name="all_traffic_light_camera" default="[camera6, camera7]" description="choose camera which use for traffic light recognition"/>

  <include file="$(find-pkg-share tier4_perception_launch)/launch/perception.launch.xml">
    <!-- Options to Switch Launch Function/Module -->
    <arg name="mode" value="$(var perception_mode)"/>
    <arg name="lidar_detection_model" value="$(var lidar_detection_model)"/>
    <arg name="vehicle_param_file" value="$(find-pkg-share $(var vehicle_model)_description)/config/vehicle_info.param.yaml"/>

    <arg name="pointcloud_container_name" value="$(var pointcloud_container_name)"/>
    <arg name="occupancy_grid_map_method" value="$(var occupancy_grid_map_method)_occupancy_grid_map"/>
    <arg name="occupancy_grid_map_updater" value="$(var occupancy_grid_map_updater)"/>

    <arg name="use_empty_dynamic_object_publisher" value="$(var use_empty_dynamic_object_publisher)"/>
    <arg name="use_low_height_cropbox" value="$(var use_low_height_cropbox)"/>
    <arg name="use_vector_map" value="$(var use_vector_map)"/>
    <arg name="use_pointcloud_map" value="$(var use_pointcloud_map)"/>
    <arg name="use_roi_based_cluster" value="$(var use_roi_based_cluster)"/>
    <arg name="use_low_intensity_cluster_filter" value="$(var use_low_intensity_cluster_filter)"/>
    <arg name="use_image_segmentation_based_filter" value="$(var use_image_segmentation_based_filter)"/>
    <arg name="use_perception_online_evaluator" value="$(var use_perception_online_evaluator)"/>
    <arg name="use_detection_by_tracker" value="$(var use_detection_by_tracker)"/>
    <arg name="use_radar_tracking_fusion" value="$(var use_radar_tracking_fusion)"/>
    <arg name="use_object_filter" value="$(var use_object_filter)"/>
    <arg name="objects_filter_method" value="$(var detected_objects_filter_method)"/>
    <arg name="objects_validation_method" value="$(var detected_objects_validation_method)"/>
    <arg name="data_path" value="$(var data_path)"/>

    <arg name="use_traffic_light_recognition" value="$(var use_traffic_light_recognition)"/>
    <arg name="traffic_light_recognition/enable_fine_detection" value="$(var traffic_light_recognition/enable_fine_detection)"/>
    <arg name="traffic_light_recognition/fusion_only" value="false"/>
    <arg name="all_traffic_light_camera" value="$(var all_traffic_light_camera)"/>

    <!-- object recognition parameters -->

    <!-- occupancy grid map parameters -->
    <arg name="occupancy_grid_map_param_path" value="$(find-pkg-share autoware_launch)/config/perception/occupancy_grid_map/$(var occupancy_grid_map_method).param.yaml"/>
    <arg name="occupancy_grid_map_updater_param_path" value="$(find-pkg-share autoware_launch)/config/perception/occupancy_grid_map/$(var occupancy_grid_map_updater)_updater.param.yaml"/>

    <!-- traffic light recognition parameters -->
    <arg name="traffic_light_arbiter_param_path" value="$(find-pkg-share autoware_launch)/config/perception/traffic_light_arbiter/traffic_light_arbiter.param.yaml"/>
    <arg name="traffic_light_fine_detector_model_path" value="$(var data_path)/traffic_light_fine_detector"/>
    <arg name="traffic_light_fine_detector_model_name" value="tlr_car_ped_yolox_s_batch_6"/>
    <arg name="traffic_light_classifier_model_path" value="$(var data_path)/traffic_light_classifier"/>
    <arg name="car_traffic_light_classifier_model_name" value="traffic_light_classifier_mobilenetv2_batch_6"/>
    <arg name="pedestrian_traffic_light_classifier_model_name" value="ped_traffic_light_classifier_mobilenetv2_batch_4"/>
  </include>
</launch>
